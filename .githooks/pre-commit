#!/bin/bash

# Pre-commit hook for Rust projects
# This runs before each commit to ensure code quality

echo "🔧 Running pre-commit checks..."

# Check if we're in a Git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "❌ Not in a Git repository"
    exit 1
fi

# Check if Rust is available
if ! command -v cargo &> /dev/null; then
    echo "⚠️  Cargo not found. Skipping Rust checks."
    echo "💡 Install Rust or run this in a dev container for full validation."
    exit 0
fi

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print status
print_status() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}✅ $2${NC}"
    else
        echo -e "${RED}❌ $2${NC}"
        echo "💡 Fix the issues above before committing."
        exit 1
    fi
}

print_info() {
    echo -e "${YELLOW}📋 $1${NC}"
}

# Run checks
print_info "Checking Cargo.toml syntax..."
cargo metadata --format-version=1 >/dev/null 2>&1
print_status $? "Cargo.toml syntax"

print_info "Running cargo check..."
cargo check --workspace --quiet
print_status $? "Cargo check"

print_info "Running tests..."
cargo test --workspace --quiet
print_status $? "Tests"

print_info "Running clippy..."
cargo clippy --workspace --quiet -- -D warnings
print_status $? "Clippy"

print_info "Checking formatting..."
cargo fmt --all -- --check
format_status=$?
if [ $format_status -ne 0 ]; then
    echo -e "${YELLOW}🔧 Auto-formatting code...${NC}"
    cargo fmt --all
    echo -e "${GREEN}✅ Code formatted. Please review and add the changes.${NC}"
    exit 1
fi
print_status $format_status "Formatting"

echo -e "${GREEN}🎉 All pre-commit checks passed!${NC}"
